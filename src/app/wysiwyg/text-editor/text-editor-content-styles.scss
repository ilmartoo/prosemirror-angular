.ProseMirror {
  $base-text-color: black;
  $base-background-color: transparent;

  $unselected-border: 2px solid $base-background-color;
  $selected-color: rgb(115, 171, 255);
  $selected-border: 2px solid $selected-color;

  $base-indent-level: 1;
  $base-indent-padding: 1.5rem;

  --text-color: $base-text-color;
  --background-color: $base-background-color;

  line-height: 1.5;
  text-align: left;

  * {
    color: var(--text-color, $base-text-color);
    background: var(--background-color, $base-background-color);
  }

  // Hide insertion caret if a atom node is selected
  &:has(.atom.ProseMirror-selectednode) {
    caret-color: transparent;
  }

  h1, h2, h3, p, table, ol, ul,
  pre, blockquote, .indent, .img-card {
    display: block;
    margin: 0.5rem 0;
  }

  .indent {
    margin: 0;

    --indent-level: $base-indent-level;
    padding-left: calc($base-indent-padding * var(--indent-level, $base-indent-level));
  }

  .img-wrapper {
    &.ProseMirror-selectednode .img-card,
    .img-card:hover {
      border: $selected-border;
    }

    .img-card {
      position: relative;
      width: fit-content;

      border: $unselected-border;
      border-radius: 0.25rem;
      overflow: hidden;

      img {
        display: block;
      }

      .img-title {
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 100%;

        color: white;
        text-align: center;
        font-style: italic;

        pointer-events: none;

        background-color: #0005;

        &::before {
          content: '';
          position: absolute;
          bottom: 100%;
          left: 0;
          height: 1rem;
          width: 100%;
          background-image: linear-gradient(#0000, #0005);
        }
      }
    }
  }

  .katex {
    display: inline-block;
    padding: 0.25rem 0.125rem;
    border-radius: 0.125rem;
    border: $unselected-border;

    overflow: clip;

    & * {
      background: $base-background-color;
    }

    &.ProseMirror-selectednode,
    &:hover {
      border: $selected-border;
    }
  }

  em, i {
    font-style: italic;
  }

  b, strong {
    font-weight: bold;
  }

  s,
  u sub,
  sub u {
    text-decoration-line: line-through;
  }

  u {
    text-decoration-line: underline;
  }

  sup, sub {
    font-size: smaller;
  }

  code {
    font-size: small;
    font-family: 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', monospace;

    color: #d04437;
    background-color: #172b4d14;

    padding: 0.09375rem 0;
  }

  pre {
    padding: 0.25rem 0.4rem;
    margin: 0.5rem 0;
    background-color: #f5f5f5;

    overflow-x: auto;

    > code {
      color: inherit;
      background-color: initial;

      padding: 0;
      white-space: inherit;
    }
  }

  > blockquote {
    opacity: 0.75;
  }

  blockquote {
    border-left: 0.25rem solid #EBECF0;
    padding: 0.25rem 0 0.25rem 0.5rem;
    margin: 0.5rem 0;
  }

  img {
    max-height: 20rem;
    min-height: 1rem;
    min-width: 1rem;
  }

  h1 {
    font-size: xx-large;
    margin-top: 0.75rem;
    margin-bottom: 1rem;
  }

  h2 {
    font-size: x-large;
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
  }

  h3 {
    font-size: large;
    margin-top: 0.75rem;
    margin-bottom: 0.5rem;
  }

  a {
    cursor: pointer;
    color: #0052CC;

    &:hover {
      color: #3385ff;
    }
  }

  ol, ul {
    padding-left: 1.125rem;
    margin: 1rem 0;

    ol, ul {
      margin: 0.5rem;
    }
  }

  table {
    display: table;
    border-collapse: collapse;
    table-layout: fixed;

    max-width: 100%;
    margin: 1rem 0;

    tr {
      width: 100%;
      min-height: 1rem;

      th {
        font-weight: bold;
      }

      td, th {
        border: black solid 1px;

        min-width: 2.5rem;
        max-width: 30rem;
        min-height: 1rem;

        margin: 0;
        padding: 0.25rem 0.5rem;

        overflow: auto;
      }
    }
  }
}
